// 布局混入
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// 文本溢出处理
@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin multi-line-ellipsis($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 滚动条样式
@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb-color);
    border-radius: 3px;
  }

  &::-webkit-scrollbar-track {
    background: var(--scrollbar-track-color);
  }
}

// 卡片样式
@mixin card-base {
  background-color: #fff;
  border-radius: $border-radius-base;
  box-shadow: $box-shadow-light;
  padding: $card-padding;
}

// 响应式设计
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (max-width: $breakpoint-xs) { @content; }
  }
  @if $breakpoint == 'sm' {
    @media (max-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == 'md' {
    @media (max-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == 'lg' {
    @media (max-width: $breakpoint-lg) { @content; }
  }
}

// 主题颜色变体
@mixin theme-variant($property, $color) {
  #{$property}: var(--#{$color}-color);
}

// 动画过渡
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property $transition-base, comma);
  }
  transition: $transitions;
}

// 悬浮效果
@mixin hover-effect {
  transition: $transition-base;
  &:hover {
    transform: translateY(-2px);
    box-shadow: $box-shadow-dark;
  }
}

// 禁用状态
@mixin disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

// 响应式网格
@mixin grid-container($columns: 3, $gap: $spacing-medium) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
  
  @include respond-to('md') {
    grid-template-columns: repeat(2, 1fr);
  }
  
  @include respond-to('sm') {
    grid-template-columns: 1fr;
  }
}

// 页面过渡动画
@mixin page-transition {
  .page-enter-active,
  .page-leave-active {
    transition: opacity $transition-base;
  }

  .page-enter-from,
  .page-leave-to {
    opacity: 0;
  }
}

// 阴影效果
@mixin elevation($level) {
  @if $level == 1 {
    box-shadow: $box-shadow-lighter;
  } @else if $level == 2 {
    box-shadow: $box-shadow-light;
  } @else if $level == 3 {
    box-shadow: $box-shadow-base;
  } @else if $level == 4 {
    box-shadow: $box-shadow-dark;
  }
}